#token=ck4flr1r01qus81pv4l0ck4flr1r01qus81pv4lg


server:
    port: 8085


# api: ''
api: 
    finnhub:
        domain: 'finnhub.io/api/v1' # cannot have "/", otherwise, UriComponentsBuilder .build() finally
        endpoint: 
            profile2: '/stock/profile2'
            stock: '/quote'

API_Key: 'ck5rdg9r01qls0umc6mgck5rdg9r01qls0umc6n0'

spring.datasource:
    url: 'jdbc:postgresql://localhost:5432/postgres'
    username: 'postgres'
    password: 'aa19888888'
spring.jpa:
    show-sql: true
    ## Hibernate Properties
    properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
    # Hibernate ddl auto (create, create-drop, validate, update)
    hibernate.ddl-auto: validate # update
    # update -> 冇table會自動create

spring.sql.init:
    # schema-locations: classpath:ddl/DDL_DROPS.sql, classpath:ddl/DDL_TUSERS.sql, classpath:ddl/DDL_TPOSTS.sql
    mode: always # always